version: '3.8'

services:
  # =====================================================
  # üóÑÔ∏è Servi√ßo do Banco de Dados PostgreSQL
  # =====================================================
  postgres-db:
    image: postgres:15-alpine
    container_name: sunops_db
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - sunops_network # Adicionado √† rede

  # =====================================================
  # CACHE: Servi√ßo do Redis
  # =====================================================
  sunops-redis:
    image: redis:7-alpine
    container_name: sunops_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sunops_network

  # =====================================================
  # ‚öôÔ∏è Servi√ßo da API Backend (FastAPI)
  # =====================================================
  sunops-api:
    container_name: sunops_api
    build:
      context: ./backend
    command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: postgres-db # Host do DB

      # Vari√°veis de autentica√ß√£o
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}

      # Vari√°veis do primeiro admin
      FIRST_ADMIN_EMAIL: ${FIRST_ADMIN_EMAIL}
      FIRST_ADMIN_PASSWORD: ${FIRST_ADMIN_PASSWORD}
      FIRST_ADMIN_NAME: ${FIRST_ADMIN_NAME}

      # --- Vari√°veis do Redis (Adicionadas) ---
      REDIS_HOST: sunops-redis # Nome do servi√ßo Redis
      REDIS_PORT: 6379
      REDIS_DB: 0

    depends_on:
      postgres-db:
        condition: service_healthy
      sunops-redis: # Adicionada depend√™ncia do Redis
        condition: service_started
    networks:
      - sunops_network # Adicionado √† rede

  # =====================================================
  # üíª Servi√ßo do Frontend React/Vite (SunOps)
  # =====================================================
  sunops-frontend:
    container_name: sunops_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE_URL=http://localhost:8000 # Esta linha est√° CORRETA.
    depends_on:
      - sunops-api
    networks:
      - sunops_network # Adicionado √† rede

# =====================================================
# üì¶ Redes e Volumes Persistentes
# =====================================================
networks:
  sunops_network:
    driver: bridge

volumes:
  postgres_data:
    name: sunops-postgres-data
  redis_data: # Adicionado volume do Redis
    name: sunops-redis-data
